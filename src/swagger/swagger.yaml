openapi: 3.0.0
info:
  title: Kapu$ta API
  version: 1.0.3
  description: API for personal finance management.
servers:
  - url: https://kapusta-serv.vercel.app
  - url: http://localhost:3001

paths:
  /auth/register:
    post:
      tags:
        - Authorization
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Invalid input data
        "409":
          description: Email already in use

  /auth/login:
    post:
      tags:
        - Authorization
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid input data
        "403":
          description: Invalid email or password

  /auth/logout:
    post:
      tags:
        - Authorization
      summary: User logout
      security:
        - BearerAuth: []
      responses:
        "204":
          description: User successfully logged out
        "401":
          description: Unauthorized
        "400":
          description: No token provided
        "404":
          description: User not found

  /auth/refresh:
    post:
      tags:
        - Authorization
      summary: Refresh access token
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
      responses:
        "200":
          description: Access token successfully refreshed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshTokenResponse"
        "401":
          description: Unauthorized or Invalid refresh token
        "400":
          description: Invalid input data
        "404":
          description: User not found

  /user/balance:
    patch:
      tags:
        - User
      summary: Update user balance
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBalanceRequest"
      responses:
        "200":
          description: Balance successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBalanceResponse"
        "400":
          description: Invalid input data
        "401":
          description: Unauthorized
        "404":
          description: User not found

  /user:
    get:
      tags:
        - User
      summary: Get current user data
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User data successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserInfo"
        "400":
          description: No token provided
        "401":
          description: Unauthorized

  /transaction/expense:
    get:
      tags:
        - Transactions
      summary: Get user expenses
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved user expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      example: "Zakupy spożywcze"
                    amount:
                      type: integer
                      example: 200
                    date:
                      type: string
                      format: date
                      example: 2024-05-01
                    category:
                      type: string
                      enum:
                        - Products
                        - Alcohol
                        - Entertainment
                        - Health
                        - Transport
                        - Housing
                        - Technique
                        - "Communal, communication"
                        - "Sports, hobbies"
                        - Education
                        - Other
        "400":
          description: no token provided
        "401":
          description: Unauthorized
        "404":
          description: User not found

    post:
      tags:
        - Transactions
      summary: Add new expense
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Zakupy spożywcze"
                amount:
                  type: integer
                  example: 200
                date:
                  type: string
                  format: date
                  example: 2024-05-01
                category:
                  type: string
                  enum:
                    - Products
                    - Alcohol
                    - Entertainment
                    - Health
                    - Transport
                    - Housing
                    - Technique
                    - "Communal, communication"
                    - "Sports, hobbies"
                    - Education
                    - Other
              required:
                - description
                - amount
                - date
                - category
      responses:
        "200":
          description: Expense successfully added
          content:
            application/json:
              schema:
                type: object
                properties:
                  newBalance:
                    type: integer
                    example: 5800
                  transaction:
                    type: object
                    properties:
                      description:
                        type: string
                        example: "Zakupy spożywcze"
                      amount:
                        type: integer
                        example: 200
                      date:
                        type: string
                        format: date
                        example: 2024-05-01
                      category:
                        type: string
                        enum:
                          - Products
                          - Alcohol
                          - Entertainment
                          - Health
                          - Transport
                          - Housing
                          - Technique
                          - "Communal, communication"
                          - "Sports, hobbies"
                          - Education
                          - Other
        "400":
          description: Invalid input data
        "401":
          description: Unauthorized
        "404":
          description: User not found

  /transaction/income:
    get:
      tags:
        - Transactions
      summary: Get user incomes
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved user incomes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      example: "Wypłata"
                    amount:
                      type: integer
                      example: 5000
                    date:
                      type: string
                      format: date
                      example: 2024-05-01
                    category:
                      type: string
                      enum: ["Salary", "Add. income"]
        "400":
          description: no token provided
        "401":
          description: Unauthorized
        "404":
          description: User not found

    post:
      tags:
        - Transactions
      summary: Add new income
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Wypłata"
                amount:
                  type: integer
                  example: 5000
                date:
                  type: string
                  format: date
                  example: 2024-05-01
                category:
                  type: string
                  enum: ["Salary", "Add. income"]
              required:
                - description
                - amount
                - date
                - category
      responses:
        "200":
          description: Income successfully added
          content:
            application/json:
              schema:
                type: object
                properties:
                  newBalance:
                    type: integer
                    example: 6000
                  transaction:
                    type: object
                    properties:
                      description:
                        type: string
                        example: "Wypłata"
                      amount:
                        type: integer
                        example: 5000
                      date:
                        type: string
                        format: date
                        example: 2024-05-01
                      category:
                        type: string
                        enum: ["Salary", "Add. income"]
        "400":
          description: Invalid input data
        "401":
          description: Unauthorized
        "404":
          description: User not found

  /transaction/{transactionId}:
    delete:
      tags:
        - Transactions
      summary: Delete a transaction
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: ID of the transaction to delete
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  newBalance:
                    type: integer
                    example: 1000
        "400":
          description: Invalid transaction ID
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found

  /transaction/period-data:
    get:
      tags:
        - Transactions
      summary: Get transactions data for a specific period
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            pattern: '^(\d{4}|\d{4}-\d{2})$'
          description: Date in format YYYY or YYYY-MM
      responses:
        "200":
          description: Successfully retrieved transactions data for the period
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomes:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 500
                      incomesData:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 100
                          additionalProperties:
                            type: integer
                            example: 100
                            "Salary": 500

        "400":
          description: Invalid date format
        "401":
          description: Unauthorized
        "404":
          description: User not found

  /transaction/expense-categories:
    get:
      tags:
        - Transactions
      summary: Get expense categories
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved expense categories
          content:
            application/json:
              schema:
                type: string
                example:
                  - Products
                  - Alcohol
                  - Entertainment
                  - Health
                  - Transport
                  - Housing
                  - Technique
                  - "Communal, communication"
                  - "Sports, hobbies"
                  - Education
                  - Other
                description: Expense categories
        "401":
          description: Unauthorized
        "404":
          description: User not found

  /transaction/income-categories:
    get:
      tags:
        - Transactions
      summary: Get income categories
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved income categories
          content:
            application/json:
              schema:
                type: string
                example:
                  - Salary
                  - "Add. income"
                description: Income categories
        "401":
          description: Unauthorized
        "404":
          description: User not found

components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          example: example@example.com
        password:
          type: string
          minLength: 6
          example: Password123
      required:
        - email
        - password
    RegisterResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
              example: test@example.com
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: example@example.com
        password:
          type: string
          example: Password123
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        sid:
          type: string
          example: TvhtZeGfqdsGJM8Kx6ncI
        user:
          type: object
          properties:
            email:
              type: string
              example: test@example.com
            balance:
              type: integer
              example: 4522
            id:
              type: string
              example: vAuSEoLO53AwiZHWCiAmM
            transactions:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                    example: 66f750c939f7039284fa05ac
                  description:
                    type: string
                    example: Groceries
                  amount:
                    type: integer
                    example: 122
                  date:
                    type: string
                    example: 2023-06-05
                  category:
                    type: string
                    enum:
                      - Products
                      - Alcohol
                      - Entertainment
                      - Health
                      - Transport
                      - Housing
                      - Technology
                      - Utilities and communication
                      - Sports and hobbies
                      - Education
                      - Other
                      - Income
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      required:
        - refreshToken
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        sid:
          type: string
          example: TvhtZeGfqdsGJM8Kx6ncI
    UpdateBalanceRequest:
      type: object
      properties:
        balance:
          type: integer
          example: 1000
      required:
        - balance
    UpdateBalanceResponse:
      type: object
      properties:
        email:
          type: string
          format: email
          example: example@example.com
        balance:
          type: integer
          example: 1000
    GetUserInfo:
      type: object
      properties:
        email:
          type: string
          description: User's email
          example: test@email.com
        balance:
          type: integer
          description: User's balance
          example: 0
        transactions:
          type: array
          description: User's transactions
          items:
            type: object
            description: User's transaction
            properties:
              description:
                type: string
                description: Transaction's description
                example: Transaction's description
              category:
                type: string
                description: Transaction's category
                enum:
                  - Products
                  - Alcohol
                  - Entertainment
                  - Health
                  - Transport
                  - Housing
                  - Technology
                  - Utilities and communication
                  - Sports and hobbies
                  - Education
                  - Other
                  - Income
              amount:
                type: integer
                description: Transaction's amount
              date:
                type: string
                description: Transaction's date
                example: "2020-12-31"
              _id:
                type: string
                description: Transaction's id
                example: 507f1f77bcf86cd799439013

securitySchemes:
  BearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
